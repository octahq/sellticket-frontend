name: Check PR and Commit Message

on:
  pull_request:
    branches:
      - develop  # Trigger the workflow when a PR is raised against the develop branch
    types:
      - opened
      - edited
      - synchronize  # Runs the check when the PR is updated with new commits

jobs:
  check-commit-message:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Install Commitlint
        run: npm install --global @commitlint/{cli,config-conventional}

      - name: Check commit messages
        run: |
          echo "module.exports = {extends: ['@commitlint/config-conventional']}" > commitlint.config.js
          # Check if there are commits in the range, if not, use HEAD
          if git rev-parse --verify HEAD~1 > /dev/null 2>&1; then
            npx commitlint --from=HEAD~1 --to=HEAD --verbose
          else
            npx commitlint --to=HEAD --verbose
          fi
        continue-on-error: false  # Fail if commit message doesn't follow the format

  check-pr-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Check pull request branch name
        run: |
          pr_branch="${{ github.head_ref }}"
          if [[ ! "$pr_branch" =~ ^feature/.*$ ]]; then
            echo "Error: PR must be from a branch starting with 'feature/'. For example, 'feature/awesome-feature'."
            exit 1
          fi

  commit-message-error:
    runs-on: ubuntu-latest
    steps:
      - name: Display commit message error
        run: |
          echo "Error: Your commit messages must follow the Conventional Commits format."
          echo "Examples: 'feat(auth): add login feature'"
          echo "For more details on commit message conventions, visit: https://www.conventionalcommits.org"